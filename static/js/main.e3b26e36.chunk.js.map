{"version":3,"sources":["components/modal-overlay/modal-overlay.module.scss","components/ingredient-in-constructor/ingredient-in-constructor.module.scss","components/app/app.module.scss","components/ingredient-details/ingredient-details.module.scss","components/feed/feed.module.scss","utils/functions.ts","services/reducers/ingredientsSlice.ts","services/reducers/authSlice.ts","services/reducers/wsSlice.ts","services/reducers/rootReducer.ts","services/middleware/index.ts","services/middleware/wsMiddleware.ts","utils/hooks.ts","components/app-header/app-header.tsx","components/tabs/tabs.tsx","components/ingredient/ingredient.tsx","components/ingredient-section/ingredient-section.tsx","components/burger-ingredients/burger-ingredients.tsx","utils/default-bun.ts","images/done.svg","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/order-accepted/order-accepted.tsx","components/ingredient-in-constructor/ingredient-in-constructor.tsx","components/burger-constructor/burger-constructor.tsx","components/ingredient-details/ingredient-page.tsx","components/ingredient-details/ingredient-details.tsx","components/ingredient-icons/ingredient-icons.tsx","components/feed/feed.tsx","components/order-info/order-info.tsx","components/order-modal/order-modal.tsx","components/side-menu/side-menu.tsx","components/profile-orders/profile-orders.tsx","components/protected-route/protected-route.tsx","components/protected-auth-route/protected-auth-route.tsx","pages/login.tsx","pages/not-found.tsx","pages/register.tsx","pages/forgot-password.tsx","pages/reset-password.tsx","pages/profile.tsx","components/app/app.tsx","reportWebVitals.ts","index.tsx","components/app-header/app-header.module.scss","components/order-modal/order-modal.module.scss","components/order-info/order-info.module.scss","components/burger-constructor/burger-constructor.module.scss","components/side-menu/side-menu.module.scss","components/profile-orders/profile-orders.module.scss","components/ingredient-icons/ingredient-icons.module.scss","components/ingredient/ingredient.module.scss","components/order-accepted/order-accepted.module.scss","pages/pages.module.scss","components/burger-ingredients/burger-ingredients.module.scss","components/modal/modal.module.scss","components/ingredient-section/ingredient-section.module.scss"],"names":["module","exports","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","fetchIngredients","createAsyncThunk","a","fetch","method","headers","then","res","ok","json","Promise","reject","status","data","catch","error","alert","fetchOrderDetails","ids","body","JSON","stringify","result","fetchOrder","orderId","ingredientsSlice","createSlice","initialState","ingredients","addedIngredients","currentItem","currentOrder","reducers","addToConstructor","state","action","itemIndex","findIndex","item","_id","payload","type","push","__v","bunIndex","oldBun","find","oldBunIndex","deleteFromConstructor","index","splice","addToDetails","removeFromDetails","addManyToConstructor","removeFromOrderDetails","extraReducers","builder","addCase","fulfilled","order","actions","API","register","form","authToken","localStorage","setItem","refreshToken","success","accessToken","indexOf","split","login","logout","token","getItem","removeItem","refreshTokenFunc","getUserDetails","err","message","setUserDetails","authSlice","user","email","forgot","addCurrentUser","wsSlice","wsConnected","orders","total","totalToday","wsGetOrders","wsConnectionSuccess","wsConnectionError","wsGetMessage","wsClose","rootReducer","combineReducers","auth","wsMiddleware","store","socket","next","dispatch","WebSocket","onopen","onerror","onmessage","event","parsedData","parse","restParsedData","onclose","send","close","useSelector","selectorHook","useDispatch","dispatchHook","AppHeader","className","styles","topHeader","mainNav","navUl","navElement","exact","to","pathname","activeClassName","activeLink","topTitle","logo","Tabs","tabs","map","onClick","console","log","id","active","activeTab","title","Ingredient","image","price","useDrag","dragRef","ref","toggleDetails","ingredient","counter","count","size","src","alt","priceWrapper","ingredientPrice","ingredientTitle","IngredientSection","tab","location","useLocation","sectionTitle","shortList","background","BurgerIngredients","useState","nearest","setNearest","scrollContainerRef","useRef","bunRef","sauceRef","mainRef","ingredientsBlock","tabsNav","onScroll","scrollContainerPosition","current","getBoundingClientRect","top","firstHeaderPosition","secondHeaderPosition","thirdHeaderPosition","firstDiff","Math","abs","secondDiff","thirdDiff","defaultBun","calories","carbohydrates","fat","image_large","image_mobile","proteins","qty","ModalOverlay","useEffect","checkForEsc","e","key","toggleModal","addEventListener","removeEventListener","overlay","children","modalRoot","getElementById","Modal","history","useHistory","ReactDOM","createPortal","modal","stopPropagation","details","modalTitle","closeButton","OrderAccepted","orderNumber","number","doneLogo","orderStartInfo","orderPlaceInfo","IngredientInConstructor","onDeleteHandler","moveIngredient","collect","monitor","isDragging","drag","useDrop","accept","hover","dragIndex","hoverIndex","hoverBoundingRect","hoverMiddleY","bottom","hoverClientY","getClientOffset","y","drop","ingredientOuter","isLocked","handleClose","text","thumbnail","BurgerConstructor","showOrder","orderDetails","Object","keys","length","bun","toggleOrderAccepted","reduce","sum","itemDel","newIngredients","newItem","itemId","dropped","onDropHandler","dropTarget","constructorBlock","topBottom","ingredientsList","ingredientsListInner","priceTotal","IngredientPage","useParams","ingredientMain","ingredientImage","ingredientName","ingredientEnergyMain","ingredientEnergy","IngredientDetails","IngredientIcons","totalPrice","miniOrder","ingrInfo","ingr","style","zIndex","miniIngrOuter","miniIngr","miniIngrImage","ingrMore","orderPrice","Feed","feedTable","ordersBlock","feedOrder","feedOrderTop","format","updatedAt","locale","ru","burgerName","ordersInfoMain","ordersInfoTop","ordersInfoDone","ordersInfoNumbers","filter","doneNum","ordersInfoBottom","doneText","OrderInfo","orderLoaded","setOrderLoaded","showed","orderMain","ingrScroll","howMany","includes","ingrLine","orderPriceForOne","OrderInfoBottom","OrderModal","parseInt","goBack","SideMenu","linksWrapper","profileLink","links","ProfileOrders","mainProfile","color","orderStatus","ProtectedRoute","rest","path","isTokenValidated","setIsTokenValidated","notAuth","setNotAuth","render","from","ProtectedAuthRoute","LoginPage","React","setValue","passValue","setPassValue","icon","setIcon","setType","inputRef","main","onSubmit","preventDefault","password","inputWrapper","placeholder","onChange","target","errorText","onIconClick","NotFound","RegisterPage","nameValue","setNameValue","mainRegister","ForgotPassword","ResetPassword","ProfilePage","userLoaded","setUserLoaded","editUserHandle","inputMainWrapper","App","burgerTable","DndProvider","backend","HTML5Backend","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","middleware","thunk","StrictMode"],"mappings":"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","file":"static/js/main.e3b26e36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__1vYCq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientOuter\":\"ingredient-in-constructor_ingredientOuter__3w6Cb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerTable\":\"app_burgerTable__3f7cB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientImage\":\"ingredient-details_ingredientImage__2dWQF\",\"ingredientName\":\"ingredient-details_ingredientName__3GEfd\",\"ingredientEnergyMain\":\"ingredient-details_ingredientEnergyMain__1pZ3S\",\"ingredientEnergy\":\"ingredient-details_ingredientEnergy__FcWlh\",\"closeButton\":\"ingredient-details_closeButton__2FLpn\",\"ingredientDetails\":\"ingredient-details_ingredientDetails__1HkDJ\",\"ingredientMain\":\"ingredient-details_ingredientMain__PwvEs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedTable\":\"feed_feedTable__2_ItE\",\"ordersBlock\":\"feed_ordersBlock__3sJz8\",\"feedOrder\":\"feed_feedOrder__1EjZX\",\"feedOrderTop\":\"feed_feedOrderTop__1-iMq\",\"orderDetails\":\"feed_orderDetails__2H-8o\",\"ordersInfoMain\":\"feed_ordersInfoMain__28QN6\",\"ordersInfoTop\":\"feed_ordersInfoTop__37lfN\",\"ordersInfoDone\":\"feed_ordersInfoDone__13WuL\",\"ordersInfoBottom\":\"feed_ordersInfoBottom__1mOVP\",\"ordersInfoNumbers\":\"feed_ordersInfoNumbers__1VR0L\",\"doneNum\":\"feed_doneNum__1KqjV\",\"doneText\":\"feed_doneText__TIcYA\",\"burgerName\":\"feed_burgerName__1weRl\"};","export function getCookie(name: string) {\n    const matches = document.cookie.match(\n        new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\n    );\n    return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\nexport function setCookie(name: string, value: string | number | boolean , props?: any) {\n    props = props || {};\n    let exp = props.expires;\n    if (typeof exp == 'number' && exp) {\n        const d = new Date();\n        d.setTime(d.getTime() + exp * 1000);\n        exp = props.expires = d;\n    }\n    if (exp && exp.toUTCString) {\n        props.expires = exp.toUTCString();\n    }\n    value = encodeURIComponent(value);\n    let updatedCookie = name + '=' + value;\n    for (const propName in props) {\n        updatedCookie += '; ' + propName;\n        const propValue = props[propName];\n        if (propValue !== true) {\n            updatedCookie += '=' + propValue;\n        }\n    }\n    document.cookie = updatedCookie;\n} ","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { getCookie } from '../../utils/functions';\nimport { TReduxStore } from './types';\n\nconst API = \"https://norma.nomoreparties.space/api/ingredients\";\n\nconst fetchIngredients = createAsyncThunk(\n    'ingredients/fetchIngredients',\n    async () => {\n        return await fetch(API, {\n            method: 'GET',\n            headers: {\"Content-Type\": \"application/json\"}\n        })\n        .then((res) => {\n            if (!res.ok) {\n                return Promise.reject(`Не удалось загрузить ингредиенты. Ошибка ${res.status}`); \n            }\n            return res.json();\n        })\n        .then((res) => {\n            return res.data;\n        })\n        .catch((error) => {\n            alert(error);\n        });\n    }\n);\n\nconst fetchOrderDetails = createAsyncThunk(\n    'ingredients/fetchOrderDetails',\n    async (ids:{ingredients:string[]}) => {\n        return await fetch('https://norma.nomoreparties.space/api/orders', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': getCookie('accessToken') as string\n            },\n            method: 'POST',\n            body: JSON.stringify(ids)\n        })\n        .then((res) => {\n            if (!res.ok) {\n                return Promise.reject(`Не удалось загрузить детали заказа. Ошибка ${res.status}`); \n            }\n            return res.json();\n        })\n        .then((result) => {\n            return result;\n        })\n        .catch((error) => {\n            alert(error);\n        });\n    }\n);\n\nconst fetchOrder = createAsyncThunk(\n    'ingredients/fetchOrder',\n    async (orderId:string) => {\n        return await fetch('https://norma.nomoreparties.space/api/orders/'+orderId, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'GET'\n        })\n        .then((res) => {\n            if (!res.ok) {\n                return Promise.reject(`Не удалось загрузить детали заказа. Ошибка ${res.status}`); \n            }\n            return res.json();\n        })\n        .then((result) => {\n            return result;\n        })\n        .catch((error) => {\n            alert(error);\n        });\n    }\n);\n\nconst ingredientsSlice = createSlice({\n    name: \"ingredients\",\n    initialState: {\n        ingredients: [],\n        addedIngredients: [],\n        currentItem: {},\n        currentOrder: {}\n    },\n    reducers: {\n        // @ts-ignore\n        addToConstructor(state: TReduxStore[\"ingredients\"], action) {\n            const itemIndex = state.ingredients.findIndex(item => item._id === action.payload._id);\n            if (action.payload.type !== 'bun') {\n                state.addedIngredients.push(action.payload);\n                //Увеличение счетчика\n                state.ingredients[itemIndex].__v++;\n            } else {\n                const bunIndex = state.addedIngredients.findIndex(item => item.type === action.payload.type);\n                if(bunIndex === -1) {\n                    state.addedIngredients.push(action.payload);\n                } else {\n                    //Обнуление счетчика у старой булки \n                    const oldBun = state.addedIngredients.find(item => item.type === 'bun');\n                    const oldBunIndex = state.ingredients.findIndex(item => item._id === oldBun?._id);\n                    state.ingredients[oldBunIndex].__v === 1 ? state.ingredients[oldBunIndex].__v-- : state.ingredients[oldBunIndex].__v = 0;\n                    //Смена булку на новую\n                    state.addedIngredients[bunIndex] = action.payload;\n                }\n                //Увеличение счетчика\n                state.ingredients[itemIndex].__v === 0 ? state.ingredients[itemIndex].__v++ : state.ingredients[itemIndex].__v = 1;\n            }\n        },\n        // @ts-ignore\n        deleteFromConstructor(state: TReduxStore[\"ingredients\"], action) {\n            const index = state.addedIngredients.findIndex(item => item._id === action.payload._id);\n            state.addedIngredients.splice(index, 1);\n            //Уменьшение счетчика\n            const itemIndex = state.ingredients.findIndex(item => item._id === action.payload._id);\n            state.ingredients[itemIndex].__v--;\n        },\n        addToDetails(state, action) {\n            state.currentItem = action.payload;\n        },\n        removeFromDetails(state, action) {\n            state.currentItem = {};\n        },\n        addManyToConstructor(state, action) {\n            state.addedIngredients = action.payload;\n        },\n        removeFromOrderDetails(state, action) {\n            state.currentOrder = {};\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(fetchIngredients.fulfilled, (state, action) => {\n            state.ingredients = action.payload;\n        });\n        builder.addCase(fetchOrderDetails.fulfilled, (state, action) => {\n            state.currentOrder = action.payload;\n        });\n        builder.addCase(fetchOrder.fulfilled, (state, action) => {\n            state.currentOrder = action.payload.order;\n        })\n    }}\n);\n\nexport default ingredientsSlice.reducer;\nexport const { addToConstructor, deleteFromConstructor, addToDetails, removeFromDetails, addManyToConstructor, removeFromOrderDetails } = ingredientsSlice.actions;\nexport { fetchIngredients, fetchOrderDetails, fetchOrder };","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { getCookie, setCookie } from '../../utils/functions';\n\nconst API = \"https://norma.nomoreparties.space/api/auth/\";\n\nconst register = createAsyncThunk(\n    'auth/register',\n    async (form: object) => {\n        return await fetch(API+'register', {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify(form)\n        })\n        .then((res) => {\n            if (!res.ok) return Promise.reject(`Не удалось зарегистрировать пользователя. Ошибка ${res.status}`)\n\n            return res.json();\n        })\n        .then((res) => {\n            localStorage.setItem('refreshToken', res.refreshToken);\n\n            let authToken\n            if(res.success) {\n                if (res.accessToken.indexOf('Bearer') === 0) authToken = res.accessToken.split('Bearer ')[1]\n            }\n            if (authToken) setCookie('accessToken', authToken)\n\n            return res;\n        })\n        .catch((error) => alert(error));\n    }\n);\n\nconst login = createAsyncThunk(\n    'auth/login',\n    async (form: object) => {\n        return await fetch(API+'login', {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify(form)\n        })\n        .then((res) => {\n            if (!res.ok) return Promise.reject(`Не удалось авторизовать пользователя. Ошибка ${res.status}`)\n\n            return res.json();\n        })\n        .then((res) => {\n            localStorage.setItem('refreshToken', res.refreshToken)\n\n            let authToken\n            if(res.success) {\n                if (res.accessToken.indexOf('Bearer') === 0) authToken = res.accessToken.split('Bearer ')[1]\n            }\n            if (authToken) setCookie('accessToken', authToken)\n\n            return res;\n        })\n        .catch((error) => {\n            alert(error);\n            return false;\n        });\n    }\n);\n\nconst logout = createAsyncThunk(\n    'auth/logout',\n    async () => {\n        return await fetch(API+'logout', {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify({\n                token: localStorage.getItem('refreshToken')\n            })\n        })\n        .then((res) => {\n            if (!res.ok) return Promise.reject(`Не удалось выйти из системы. Ошибка ${res.status}`)\n            setCookie('accessToken', '')\n            localStorage.removeItem('refreshToken')\n            return res.json();\n        })\n        .then((result) => {\n            return result;\n        })\n        .catch((error) => {\n            alert(error);\n            return false;\n        });\n    }\n);\n\nconst refreshToken = createAsyncThunk(\n    'auth/refreshToken',\n    async () => {\n        return await fetch(API+'token', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify({\n                token: localStorage.getItem('refreshToken')\n            })\n        })\n        .then((res) => {\n            if (!res.ok) return Promise.reject(`Не удалось обновить токен. Ошибка ${res.status}`)\n            return res.json();\n        })\n        .then((result) => {\n            localStorage.setItem('refreshToken', result.refreshToken)\n            setCookie('accessToken', result.accessToken)\n            return result;\n        })\n        .catch((error) => {\n            alert(error);\n            return false;\n        });\n    }\n);\n\nconst refreshTokenFunc = async () => {\n    return await fetch(API+'token', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            token: localStorage.getItem('refreshToken')\n        })\n    })\n    .then((res) => {\n        if (!res.ok) return Promise.reject(`Не удалось обновить токен. Ошибка ${res.status}`)\n        return res.json();\n    })\n    .then((result) => {\n        localStorage.setItem('refreshToken', result.refreshToken)\n        setCookie('accessToken', result.accessToken)\n        return result;\n    })\n}\n\nconst getUserDetails = createAsyncThunk(\n    'auth/getUserDetails',\n    async () => {\n        return await fetch(API+'user', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': getCookie('accessToken') as string\n            }\n        })\n        .then((res) => {\n            if (!res.ok) return res.json().then((err) => Promise.reject(err))\n            return res.json();\n        })\n        .catch((err) => {\n            if (err.message === 'jwt expired') {\n                return refreshTokenFunc()\n            }\n            return Promise.reject(err);\n        })\n        .then(res => {\n            return fetch(API+'user', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': getCookie('accessToken') as string\n                }\n            })\n        })\n        .then((res) => {\n            if (!res.ok) return res.json().then((err) => Promise.reject(err))\n            return res.json();\n        })\n    }\n);\n\nconst setUserDetails = createAsyncThunk(\n    'auth/setUserDetails',\n    async (form:object) => {\n        return await fetch(API+'user', {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': getCookie('accessToken') as string\n            },\n            method: 'PATCH',\n            body: JSON.stringify(form)\n        })\n        .then((res) => {\n            if (!res.ok) return res.json().then((err) => Promise.reject(err))\n            alert('Данные обновлены')\n            return res.json();\n        })\n        .catch((err) => {\n            alert(err)\n            return false;\n        });\n    }\n);\n\nconst authSlice = createSlice({\n    name: \"auth\",\n    initialState: {\n        success: false,\n        user: {\n            email: null,\n            name: null\n        },\n        accessToken: '',\n        refreshToken: '',\n        forgot: false\n    },\n    reducers: {\n        addCurrentUser(state, action) {\n            state.user = action.payload;\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(register.fulfilled, (state, action) => {\n            state.user = action.payload.user\n            state.success = action.payload.success\n            state.accessToken = action.payload.accessToken\n            state.refreshToken = action.payload.refreshToken\n        });\n        builder.addCase(login.fulfilled, (state, action) => {\n            state.user = action.payload.user\n            state.success = action.payload.success\n            state.accessToken = action.payload.accessToken\n            state.refreshToken = action.payload.refreshToken\n        });\n        builder.addCase(refreshToken.fulfilled, (state, action) => {\n            state.success = action.payload.success\n            state.accessToken = action.payload.accessToken\n            state.refreshToken = action.payload.refreshToken\n        });\n        builder.addCase(logout.fulfilled, (state, action) => {\n            if(action.payload.success) {\n                state.user = {} as any\n                state.success = false\n                state.accessToken = ''\n                state.refreshToken = ''\n            }\n        });\n        builder.addCase(getUserDetails.fulfilled, (state, action) => {\n            if(action.payload.success) {\n                state.user.email = action.payload.user.email\n                state.user.name = action.payload.user.name\n                state.success = action.payload.success\n            }\n        });\n        builder.addCase(setUserDetails.fulfilled, (state, action) => {\n            state.user = action.payload.user\n            state.success = action.payload.success\n        });\n    }\n});\n\nexport default authSlice.reducer;\nexport const { addCurrentUser } = authSlice.actions;\nexport { register, login, logout, refreshToken, getUserDetails, setUserDetails, refreshTokenFunc };","import { createSlice } from '@reduxjs/toolkit';\n\nconst wsSlice = createSlice({\n    name: \"orders\",\n    initialState: {\n        wsConnected: false,\n        orders: [],\n        total: null,\n        totalToday: null\n    },\n    reducers: {\n        wsGetOrders(state, action) {\n            state.wsConnected = action.payload.success\n            state.orders = action.payload.orders\n            state.total = action.payload.total\n            state.totalToday = action.payload.totalToday\n        },\n        wsConnectionSuccess(state) {\n            state.wsConnected = true\n        },\n        wsConnectionError(state) {\n            state.wsConnected = false\n        },\n        wsGetMessage(state, action) {\n            state.orders = action.payload.orders\n            state.total = action.payload.total\n            state.totalToday = action.payload.totalToday\n        },\n        wsClose(state) {\n            state.wsConnected = false\n        }\n    }\n});\n\nexport default wsSlice.reducer;\nexport const { wsGetOrders, wsConnectionSuccess, wsConnectionError, wsGetMessage, wsClose } = wsSlice.actions;","import { combineReducers } from 'redux';\nimport ingredientsSlice from \"./ingredientsSlice\";\nimport authSlice from \"./authSlice\";\nimport wsSlice from './wsSlice';\n\nconst rootReducer = combineReducers({\n    ingredients: ingredientsSlice,\n    auth: authSlice,\n    orders: wsSlice\n})\n\nexport default rootReducer;","import { wsMiddlewareF } from \"./wsMiddleware\";\n\nexport const wsMiddleware = wsMiddlewareF;","import {\n    wsGetOrders,\n    wsConnectionSuccess,\n    wsConnectionError,\n    wsGetMessage,\n    wsClose,\n} from \"../reducers/wsSlice\";\n\nexport const wsMiddlewareF = (store: any) => {\n    let socket: any = null;\n\n    return (next: Function) => (action: {type: string, payload: string}) => {\n        const { dispatch } = store;\n        const { type, payload } = action;\n        if (type === wsGetOrders.type) {\n            socket = new WebSocket(payload);\n        }\n        if (socket) {\n            socket.onopen = () => {\n                dispatch(wsConnectionSuccess());\n            };\n            socket.onerror = () => {\n                dispatch(wsConnectionError());\n            };\n            socket.onmessage = (event: {data: string}) => {\n                const { data } = event;\n                const parsedData = JSON.parse(data);\n                const { success, ...restParsedData } = parsedData;\n                dispatch(wsGetMessage(restParsedData));\n            };\n            socket.onclose = () => {\n                dispatch(wsClose());\n            };\n            if (type === wsGetMessage.type) {\n                const message = payload;\n                socket.send(JSON.stringify(message));\n            }\n            if (type === wsClose.type) {\n                socket.close();\n            }\n        }\n        next(action);\n    };\n};\n","import {\n    TypedUseSelectorHook,\n    useSelector as selectorHook,\n    useDispatch as dispatchHook\n} from 'react-redux';\nimport { TReduxStore } from '../services/reducers/types';\nimport { AppDispatch } from '../index';\n\nexport const useSelector: TypedUseSelectorHook<TReduxStore> = selectorHook;\nexport const useDispatch = () => dispatchHook<AppDispatch>();\n","import { Link, NavLink } from \"react-router-dom\";\nimport {\n    Logo,\n    BurgerIcon,\n    ListIcon,\n    ProfileIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport styles from \"./app-header.module.scss\";\n\nconst AppHeader = () => {\n    return (\n        <header className={styles.topHeader}>\n            <nav className={`${styles.mainNav} p-6`}>\n                <ul className={styles.navUl}>\n                    <li className={styles.navElement}>\n                        <NavLink\n                            exact={true}\n                            to={{ pathname: \"/\" }}\n                            className=\"text_color_inactive\"\n                            activeClassName={styles.activeLink}\n                        >\n                            <div className=\"d-ib\">\n                                <BurgerIcon type=\"primary\" />\n                            </div>\n                            <span\n                                className={`${styles.topTitle} text text_type_main-default ml-2`}\n                            >\n                                Конструктор\n                            </span>\n                        </NavLink>\n                    </li>\n                    <li className={styles.navElement}>\n                        <NavLink\n                            exact={true}\n                            to={{ pathname: \"/feed\" }}\n                            className=\"text_color_inactive\"\n                            activeClassName={styles.activeLink}\n                        >\n                            <div className=\"d-ib\">\n                                <ListIcon type=\"primary\" />\n                            </div>\n                            <span\n                                className={`${styles.topTitle} text text_type_main-default ml-2`}\n                            >\n                                Лента заказов\n                            </span>\n                        </NavLink>\n                    </li>\n                    <li className={styles.logo}>\n                        <Link to=\"/\">\n                            <Logo />\n                        </Link>\n                    </li>\n                    <li className={styles.navElement}>\n                        <NavLink\n                            exact={true}\n                            to={{ pathname: \"/profile/orders\" }}\n                            className=\"text_color_inactive\"\n                            activeClassName={styles.activeLink}\n                        >\n                            <div className=\"d-ib\">\n                                <ProfileIcon type=\"primary\" />\n                            </div>\n                            <span\n                                className={`${styles.topTitle} text text_type_main-default ml-2`}\n                            >\n                                Личный кабинет\n                            </span>\n                        </NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    );\n};\n\nexport default AppHeader;\n","import { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { TIngredientSectionProps } from \"../ingredient-section/types\";\n\nconst Tabs = ({ tabs }: {tabs: TIngredientSectionProps}) => {\n    return (\n        <div className=\"d-flex mb-40\">\n            {tabs.tabs.map((item) => {\n                return (\n                  <Tab onClick={() => console.log('click on tab')} key={item.id} value={item.id} active={tabs.activeTab === item.id}>{item.title}</Tab>\n                )\n            })}\n        </div>\n    );\n};\n\nexport default Tabs;\n","import { useDrag } from \"react-dnd\";\nimport styles from \"./ingredient.module.scss\";\nimport {\n    CurrencyIcon,\n    Counter,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { TIngredient } from \"../../utils/types\";\n\nconst Ingredient = (props: {item: TIngredient, toggleDetails: (a: TIngredient) => void}) => {\n    const { _id, image, price, name, __v } = props.item;\n\n    const [, dragRef] = useDrag({\n        type: \"ingredient\",\n        item: {_id}\n    });\n\n    return (\n        <div ref={dragRef} onClick={() => props.toggleDetails(props.item)} className={styles.ingredient}>\n            <div className={styles.counter}>\n                <Counter count={__v} size=\"default\" />\n            </div>\n            <img src={image} alt={name} />\n            <div className={styles.priceWrapper}>\n                <span className={`${styles.ingredientPrice} mr-5`}>{price}</span>\n                <CurrencyIcon type=\"primary\" />\n            </div>\n            <p className={`${styles.ingredientTitle} text text_type_main-default`}>{name}</p>\n        </div>\n    );\n};\n\nexport default Ingredient;\n","import { useSelector } from \"../../utils/hooks\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport Ingredient from \"../ingredient/ingredient\";\nimport styles from \"./ingredient-section.module.scss\";\nimport { TTab } from \"./types\";\n\n\nconst IngredientSection = ({ tab, toggleDetails }: {tab: TTab, toggleDetails: () => void}) => {\n    const ingredients = useSelector(store => store.ingredients.ingredients);\n    const location = useLocation();\n\n    return (\n        <>\n            <span ref={tab.ref} className={`${styles.sectionTitle} text text_type_main-default mb-25`}>{tab.title}</span>\n            <div className={styles.shortList}>\n                {ingredients.map((item) => {\n                    if (item.type === tab.id) {\n                        return (\n                            <Link key={item._id} to={{ pathname: `/ingredients/${item._id}`, state: { background: location }}}>\n                                <Ingredient toggleDetails={toggleDetails} key={item._id} item={item} />\n                            </Link>\n                        )\n                    }\n                })}\n            </div>\n        </>\n    );\n};\n\nexport default IngredientSection;","import { useState, useRef } from \"react\";\nimport { useDispatch } from \"../../utils/hooks\";\nimport { useLocation } from \"react-router-dom\";\nimport { addToDetails, removeFromDetails } from \"../../services/reducers/ingredientsSlice\";\nimport styles from \"./burger-ingredients.module.scss\";\nimport Tabs from \"../tabs/tabs\";\nimport IngredientSection from \"../ingredient-section/ingredient-section\";\nimport { ILocation } from \"../../utils/types\";\n\nconst BurgerIngredients = () => {\n    const dispatch = useDispatch()\n    const location = useLocation<ILocation>()\n    const [nearest, setNearest] = useState(\"bun\");\n\n    const scrollContainerRef = useRef(null) as any;\n    const bunRef = useRef(null) as any;\n    const sauceRef = useRef(null) as any;\n    const mainRef = useRef(null) as any;\n\n    const handleScroll = () => {\n        // Сравниваем расстояния от заголовков до верхней части скроллящегося контейнера\n        const scrollContainerPosition = scrollContainerRef.current.getBoundingClientRect().top;\n        const firstHeaderPosition = bunRef.current.getBoundingClientRect().top;\n        const secondHeaderPosition = sauceRef.current.getBoundingClientRect().top;\n        const thirdHeaderPosition = mainRef.current.getBoundingClientRect().top;\n\n        const firstDiff = Math.abs(scrollContainerPosition - firstHeaderPosition);\n        const secondDiff = Math.abs(scrollContainerPosition - secondHeaderPosition);\n        const thirdDiff = Math.abs(scrollContainerPosition - thirdHeaderPosition);\n    \n        if (firstDiff < secondDiff) {\n          setNearest(\"bun\");\n        } else if (secondDiff < thirdDiff) {\n          setNearest(\"sauce\");\n        } else {\n          setNearest(\"main\");\n        }\n    };\n\n    const tabs = {\n        activeTab: nearest,\n        tabs: [\n            {\n                id: \"bun\",\n                title: \"Булки\",\n                ref: bunRef\n            },\n            {\n                id: \"sauce\",\n                title: \"Соусы\",\n                ref: sauceRef\n            },\n            {\n                id: \"main\",\n                title: \"Начинки\",\n                ref: mainRef\n            },\n        ],\n    };\n\n    function toggleDetails(item?: any) {\n        if(item._id) {\n            dispatch(addToDetails(item))\n        } else {\n            dispatch(removeFromDetails(0))\n            // @ts-ignore\n            location.push('/')\n        } \n    }\n\n    return (\n        <section className={styles.ingredientsBlock}>\n            <nav className={styles.tabsNav}>\n                <Tabs tabs={tabs} />\n            </nav>\n            <div ref={scrollContainerRef} onScroll={handleScroll} className={styles.ingredients}>\n                {tabs.tabs.map((item, index) => {\n                    return (\n                    <IngredientSection toggleDetails={toggleDetails} key={index} tab={item}/>\n                    )\n                })}\n            </div>\n        </section>\n    );\n};\n\nexport default BurgerIngredients;\n","const defaultBun = {\n    calories: 0,\n    carbohydrates: 0,\n    fat: 0,\n    image: \"https://code.s3.yandex.net/react/code/bun-02.png\",\n    image_large:\n        \"https://code.s3.yandex.net/react/code/bun-02-large.png\",\n    image_mobile:\n        \"https://code.s3.yandex.net/react/code/bun-02-mobile.png\",\n    name: \"Перетяните булку в эту область\",\n    price: 0,\n    proteins: 0,\n    type: \"bun\",\n    __v: 0,\n    _id: \"60d3b41abdacab0026a733c6\",\n    qty: 0\n};\nexport default defaultBun;","export default __webpack_public_path__ + \"static/media/done.08843351.svg\";","import { useEffect } from \"react\";\nimport styles from \"./modal-overlay.module.scss\";\n\nconst ModalOverlay = (props: {toggleModal: () => void, children: JSX.Element}) => {\n    useEffect(()=>{\n        const checkForEsc = (e: KeyboardEvent) => {\n            if(e.key === 'Escape') props.toggleModal();\n        }\n        document.addEventListener(\"keydown\", checkForEsc, false);\n\n        return () => {\n            document.removeEventListener(\"keydown\", checkForEsc, false);\n        }\n    }, [props])\n\n    return (\n        <div onClick={props.toggleModal} className={styles.overlay}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default ModalOverlay;","import ReactDOM from \"react-dom\";\nimport { useDispatch } from \"../../utils/hooks\";\nimport styles from \"./modal.module.scss\";\nimport { CloseIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { removeFromDetails, removeFromOrderDetails } from \"../../services/reducers/ingredientsSlice\";\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\nimport { useHistory } from \"react-router-dom\";\n\nconst modalRoot = document.getElementById(\"react-modals\") as HTMLElement;\n\n\nconst Modal = (props: { modalTitle?: string, children: JSX.Element }) => {\n    const history = useHistory()\n\n    function toggleDetails() {\n        dispatch(removeFromDetails(0))\n        dispatch(removeFromOrderDetails(0))\n        history.replace('/')\n    }\n    const dispatch = useDispatch()\n\n    return ReactDOM.createPortal(\n        <ModalOverlay toggleModal={toggleDetails}>\n            <div className={styles.modal} onClick={e => e.stopPropagation()}>\n                <div className={`${styles.details} text 22 text_type_main-large`}>\n                    <span>{props.modalTitle}</span>\n                    <div\n                        className={styles.closeButton}\n                        onClick={toggleDetails}\n                    >\n                        <CloseIcon type=\"primary\" />\n                    </div>\n                </div>\n                {props.children}\n            </div>\n        </ModalOverlay>,\n        modalRoot\n    );\n};\n\nexport default Modal;\n","import doneLogo from \"../../images/done.svg\";\nimport styles from \"./order-accepted.module.scss\";\nimport Modal from \"../modal/modal\";\n\nconst OrderAccepted = (props: {toggleModal: () => void, number: number}) => {\n    return (\n        <Modal>\n            <>\n                <span className={styles.orderNumber}>{props.number}</span>\n                <span className={`${styles.orderId} text text_type_main-large`}>\n                    идентификатор заказа\n                </span>\n                <img className={styles.doneLogo} src={doneLogo} alt=\"done logo\" />\n                <span className={`${styles.orderStartInfo} text text_type_main-medium`} >\n                    Ваш заказ начали готовить\n                </span>\n                <span className={`${styles.orderPlaceInfo} text text_type_main-medium`} >\n                    Дождитесь готовности на орбитальной станции\n                </span>\n            </>\n        </Modal>\n    );\n};\n\nexport default OrderAccepted;\n","import { useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport styles from \"./ingredient-in-constructor.module.scss\";\nimport {\n    DragIcon,\n    ConstructorElement,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { TIngredientInConstructorProps } from \"./types\";\n\nconst IngredientInConstructor = (props: TIngredientInConstructorProps) => {\n    const { _id, image, price, name } = props.item;\n    const { onDeleteHandler, moveIngredient, index } = props;\n\n    const ref = useRef(null);\n\n    const [, drag] = useDrag({\n        type: \"ingredientInner\",\n        item: () => {\n            return { _id, index };\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n\n    const [, drop] = useDrop({\n        accept: \"ingredientInner\",\n        hover: (item: {index:number}, monitor) => {\n            if (!ref.current) {\n                return;\n            }\n            const dragIndex = item.index;\n            const hoverIndex = index;\n            if (dragIndex === hoverIndex) {\n                return;\n            }\n            // @ts-ignore\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\n            // Get vertical middle\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n            // Determine mouse position\n            const clientOffset = monitor.getClientOffset();\n            // Get pixels to the top\n            // @ts-ignore\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n            // Only perform the move when the mouse has crossed half of the items height\n            // When dragging downwards, only move when the cursor is below 50%\n            // When dragging upwards, only move when the cursor is above 50%\n            // Dragging downwards\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n                return;\n            }\n            // Dragging upwards\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n                return;\n            }\n            // Time to actually perform the action\n            moveIngredient(dragIndex, hoverIndex);\n            // Note: we're mutating the monitor item here!\n            // Generally it's better to avoid mutations,\n            // but it's good here for the sake of performance\n            // to avoid expensive index searches.\n            item.index = hoverIndex;\n            \n        }\n    });\n    drag(drop(ref));\n\n    return (\n        <div ref={ref} className={styles.ingredientOuter}>\n            <DragIcon type=\"primary\" />\n            <ConstructorElement\n                isLocked={false}\n                handleClose={() => {\n                    onDeleteHandler(props.item);\n                }}\n                text={name}\n                price={price}\n                thumbnail={image}\n            />\n        </div>\n    );\n};\n\nexport default IngredientInConstructor;\n","import { useSelector, useDispatch } from \"../../utils/hooks\";\nimport { useDrop } from \"react-dnd\";\nimport {\n    ConstructorElement,\n    Button,\n    CurrencyIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport styles from \"./burger-constructor.module.scss\";\nimport defaultBun from \"../../utils/default-bun\";\nimport OrderAccepted from \"../order-accepted/order-accepted\";\nimport IngredientInConstructor from \"../ingredient-in-constructor/ingredient-in-constructor\";\nimport {\n    addToConstructor,\n    deleteFromConstructor,\n    fetchOrderDetails,\n    addManyToConstructor,\n    removeFromOrderDetails\n} from \"../../services/reducers/ingredientsSlice\";\nimport { useHistory } from \"react-router-dom\";\nimport { TIngredient } from \"../../utils/types\";\n\nconst BurgerConstructor = () => {\n    const dispatch = useDispatch()\n    const ingredients = useSelector(store => store.ingredients.ingredients)\n    const addedIngredients = useSelector(store => store.ingredients.addedIngredients)\n    let showOrder = true\n    const orderDetails = useSelector(store => store.ingredients.currentOrder)\n    if (Object.keys(orderDetails).length === 0) {\n        showOrder = false\n    }\n    const user = useSelector(store => store.auth.user)\n    const history = useHistory();\n\n    let bun = addedIngredients.find((item) => item.type === \"bun\")\n    if (!bun) bun = defaultBun\n\n    function toggleOrderAccepted() {\n        if(user.email) {\n            if (addedIngredients.length > 0) {\n                if (showOrder) {\n                    dispatch(removeFromOrderDetails(0));\n                } else {\n                    const ids = {\n                        ingredients: addedIngredients.map((item) => item._id)\n                    };\n                    dispatch<any>(fetchOrderDetails(ids));\n                }\n            } else {\n                alert(\"Добавьте ингредиенты в конструктор\");\n            }\n        } else {\n            history.push(\"/login\")\n        }\n    }\n\n    const price = addedIngredients.reduce(function (sum, current) {\n        if (current.type !== \"bun\") {\n            return sum + current.price;\n        } else {\n            return sum;\n        }\n    }, bun.price * 2);\n\n    const onDropHandler = (itemId: TIngredient) => {\n        const dropped = ingredients.find((item) => item._id === itemId._id);\n        dispatch(addToConstructor(dropped));\n    };\n\n    const onDeleteHandler = (itemDel: TIngredient) => {\n        const item = ingredients.find((item) => item._id === itemDel._id);\n        dispatch(deleteFromConstructor(item));\n    };\n\n    const moveIngredient = (dragIndex: number, hoverIndex: number) => {\n        const newIngredients = [...addedIngredients];\n        const newItem = addedIngredients[dragIndex];\n        newIngredients.splice(dragIndex, 1);\n        newIngredients.splice(hoverIndex, 0, newItem);\n\n        dispatch(addManyToConstructor(newIngredients));\n    }\n\n    const [, dropTarget] = useDrop({\n        accept: \"ingredient\",\n        drop(itemId: TIngredient) {\n            onDropHandler(itemId);\n        },\n    });\n\n    return (\n        <section className={styles.constructorBlock}>\n            {showOrder && (\n                <OrderAccepted\n                    number={orderDetails.order.number}\n                    toggleModal={toggleOrderAccepted}\n                />\n            )}\n            <div className=\"ml-15\">\n                <div className={styles.topBottom}>\n                    <ConstructorElement\n                        type=\"top\"\n                        isLocked={true}\n                        text={`${bun.name} (верх)`}\n                        price={bun.price}\n                        thumbnail={bun.image}\n                    />\n                </div>\n                <div ref={dropTarget} className={styles.ingredientsList}>\n                    <div className={styles.ingredientsListInner}>\n                        {addedIngredients.map((item, index) => {\n                            if (item.type !== \"bun\") {\n                                return (\n                                    <IngredientInConstructor\n                                        index={index}\n                                        onDeleteHandler={onDeleteHandler}\n                                        key={index}\n                                        item={item}\n                                        moveIngredient={moveIngredient}\n                                    />\n                                );\n                            }\n                        })}\n                    </div>\n                </div>\n                <div className={styles.topBottom}>\n                    <ConstructorElement\n                        type=\"bottom\"\n                        isLocked={true}\n                        text={`${bun.name} (низ)`}\n                        price={bun.price}\n                        thumbnail={bun.image}\n                    />\n                </div>\n            </div>\n            <div className={styles.priceTotal}>\n                <div className={styles.price}>\n                    <span className=\"mr-5\">{price}</span>\n                    <CurrencyIcon type=\"primary\" />\n                </div>\n                <Button\n                    onClick={toggleOrderAccepted}\n                    type=\"primary\"\n                    size=\"large\"\n                >\n                    Оформить заказ\n                </Button>\n            </div>\n        </section>\n    );\n};\n\nexport default BurgerConstructor;\n","import { useParams } from 'react-router-dom'\nimport { useSelector } from \"../../utils/hooks\";\nimport styles from \"./ingredient-details.module.scss\";\n\nconst IngredientPage = () => {\n    const { id }: {id:string} = useParams();\n    const ingredients = useSelector(store => store.ingredients.ingredients);\n    const item = ingredients.find(item => item._id === id);\n    \n    return (\n        item ? (\n            <div className={styles.ingredientMain}>\n            <div className={`${styles.details} text text_type_main-large`}>\n                <span>Детали ингредиента</span>\n            </div>\n            <img\n                className={styles.ingredientImage}\n                src={item.image}\n                alt=\"ingredient\"\n            />\n            <span\n                className={`${styles.ingredientName} text text_type_main-medium mt-15`}\n            >\n                {item.name}\n            </span>\n            <div className={styles.ingredientEnergyMain}>\n                <div className={`${styles.ingredientEnergy} mr-20`}>\n                    <span>Калории,ккал</span>\n                    <span className=\"text text_type_digits-default\">\n                        {item.calories}\n                    </span>\n                </div>\n                <div className={`${styles.ingredientEnergy} mr-20`}>\n                    <span>Белки, г</span>\n                    <span className=\"text text_type_digits-default\">\n                        {item.proteins}\n                    </span>\n                </div>\n                <div className={`${styles.ingredientEnergy} mr-20`}>\n                    <span>Жиры, г</span>\n                    <span className=\"text text_type_digits-default\">\n                        {item.fat}\n                    </span>\n                </div>\n                <div className={styles.ingredientEnergy}>\n                    <span>Углеводы, г</span>\n                    <span className=\"text text_type_digits-default\">\n                        {item.carbohydrates}\n                    </span>\n                </div>\n            </div>\n        </div>\n        ) : (\n            null\n        )\n        \n    );\n};\n\nexport default IngredientPage;\n","import { useSelector } from \"../../utils/hooks\";\nimport styles from \"./ingredient-details.module.scss\";\nimport Modal from \"../modal/modal\";\n\nconst IngredientDetails = () => {\n    const currentItem = useSelector(store => store.ingredients.currentItem);\n\n    return (\n        <Modal modalTitle=\"Детали ингредиента\">\n            <>\n                <img\n                    className={styles.ingredientImage}\n                    src={currentItem.image}\n                    alt=\"ingredient\"\n                />\n                <span\n                    className={`${styles.ingredientName} text text_type_main-medium mt-15`}\n                >\n                    {currentItem.name}\n                </span>\n                <div className={styles.ingredientEnergyMain}>\n                    <div className={`${styles.ingredientEnergy} mr-20`}>\n                        <span>Калории,ккал</span>\n                        <span className=\"text text_type_digits-default\">\n                            {currentItem.calories}\n                        </span>\n                    </div>\n                    <div className={`${styles.ingredientEnergy} mr-20`}>\n                        <span>Белки, г</span>\n                        <span className=\"text text_type_digits-default\">\n                            {currentItem.proteins}\n                        </span>\n                    </div>\n                    <div className={`${styles.ingredientEnergy} mr-20`}>\n                        <span>Жиры, г</span>\n                        <span className=\"text text_type_digits-default\">\n                            {currentItem.fat}\n                        </span>\n                    </div>\n                    <div className={styles.ingredientEnergy}>\n                        <span>Углеводы, г</span>\n                        <span className=\"text text_type_digits-default\">\n                            {currentItem.carbohydrates}\n                        </span>\n                    </div>\n                </div>\n            </>\n        </Modal>\n    );\n};\n\nexport default IngredientDetails;\n","import styles from \"./ingredient-icons.module.scss\";\nimport { TOrderSm} from \"../../services/reducers/types\";\nimport { useSelector } from \"../../utils/hooks\";\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nconst IngredientIcons = ({ order }: {order: TOrderSm}) => {\n    const ingredients = useSelector((store) => store.ingredients.ingredients);\n    var totalPrice = 0;\n\n    return (\n        <>\n            <div className={styles.miniOrder}>\n                {order.ingredients.map((item, index) => {\n                    const ingrInfo = ingredients.find(ingr => ingr._id === item);\n                    if (ingrInfo !== undefined) {\n                        totalPrice += ingrInfo.price;\n\n                        if (index > 5) {\n                            return \"\";\n                        }\n                        \n                        return (\n                            <div key={index}\n                                style={{ zIndex: order.ingredients.length - index }}\n                                className={styles.miniIngrOuter}\n                            >\n                                <div className={styles.miniIngr}>\n                                    <img\n                                        className={styles.miniIngrImage}\n                                        src={ingrInfo.image}\n                                    />\n                                    {(index === 5 && order.ingredients.length > 6) && (\n                                        <div className={styles.ingrMore}>\n                                            +{order.ingredients.length - 5}\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                        );\n                    } else return (\n                        ''\n                    )  \n                })}\n            </div>\n            <div className={`${styles.orderPrice} text text_type_digits-default`}>\n                {totalPrice}\n                <CurrencyIcon type=\"primary\" />\n            </div>\n        </>\n    );\n};\n\nexport default IngredientIcons;\n","import { useEffect } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { ru } from 'date-fns/esm/locale';\nimport { useSelector, useDispatch } from \"../../utils/hooks\";\nimport { wsGetOrders, wsClose } from \"../../services/reducers/wsSlice\";\nimport IngredientIcons from \"../ingredient-icons/ingredient-icons\";\nimport styles from \"./feed.module.scss\";\n\n\nconst Feed = () => {\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    useEffect(() => {\n        dispatch(wsGetOrders(\"wss://norma.nomoreparties.space/orders/all\"));\n\n        return () => {\n            dispatch(wsClose());\n        };\n    }, [dispatch]);\n\n    const orders = useSelector((store) => store.orders);\n    const ingredients = useSelector((store) => store.ingredients.ingredients);\n\n    if (orders.orders && ingredients) {\n        return (\n            <main className={styles.feedTable}>\n                <span className=\"text text_type_main-large mt-40\">\n                    Лента заказов\n                </span>\n                <section className={styles.ordersBlock}>\n                    {orders.orders.map((item, index) => {\n                        return (\n                            <Link key={index} to={{ pathname: `/feed/${item.number}`, state: { background: location }}}>\n                                <div className={styles.feedOrder}>\n                                    <div className={styles.feedOrderTop}>\n                                        <span className=\"text text_type_digits-default\">\n                                            #{item.number}\n                                        </span>\n                                        <span className=\"text text_type_main-default text_color_inactive\">\n                                            {format(new Date(Date.parse(item.updatedAt)), 'dd MMM kk:mm O', {locale:ru})}\n                                        </span>\n                                    </div>\n                                    <div className={`${styles.burgerName} text text_type_main-medium`}>\n                                        <div>{item.name}</div>\n                                        \n                                    </div>\n                                    <div className={styles.orderDetails}>\n                                        <IngredientIcons order={item} />\n                                    </div>\n                                </div>\n                            </Link>\n                        );\n                    })}\n                </section>\n                <section className={styles.ordersInfoMain}>\n                    <div className={styles.ordersInfoTop}>\n                        <div className={styles.ordersInfoDone}>\n                            <span className=\"text text_type_main-medium\">\n                                Готовы:\n                            </span>\n                            <div className={styles.ordersInfoNumbers}>\n                                {orders.orders\n                                    .filter((item) => item.status === \"done\")\n                                    .map((item, index) => {\n                                        if (index < 10) {\n                                            return (\n                                                <span key={index}\n                                                    className={`${styles.doneNum} mb-2 text text_type_digits-default`}\n                                                >\n                                                    {item.number}\n                                                </span>\n                                            );\n                                        } else return null\n                                    })}\n                            </div>\n                        </div>\n                        <div className={styles.ordersInfoDone}>\n                            <span className=\"text text_type_main-medium\">\n                                В работе:\n                            </span>\n                            <div className={styles.ordersInfoNumbers}>\n                                {orders.orders\n                                    .filter((item) => item.status !== \"done\")\n                                    .map((item, index) => {\n                                        if (index < 10) {\n                                            return (\n                                                <span key={index} className=\"text mb-2 text_type_digits-default\">\n                                                    {item.number}\n                                                </span>\n                                            );\n                                        } else return null;\n                                    })}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={styles.ordersInfoBottom}>\n                        <div\n                            className={`${styles.doneText} text text_type_main-medium`}\n                        >\n                            Выполнено за все время:\n                        </div>\n                        <div className=\"text mb-6 text_type_digits-large\">\n                            {orders.total}\n                        </div>\n                        <div\n                            className={`${styles.doneText} text text_type_main-medium`}\n                        >\n                            Выполнено за сегодня:\n                        </div>\n                        <div className=\"text text_type_digits-large\">\n                            {orders.totalToday}\n                        </div>\n                    </div>\n                </section>\n            </main>\n        );\n    } else return null\n};\n\nexport default Feed;\n","import { useState, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom'\nimport { useSelector, useDispatch } from \"../../utils/hooks\";\nimport { fetchOrder } from \"../../services/reducers/ingredientsSlice\";\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { format } from \"date-fns\";\nimport { ru } from 'date-fns/esm/locale';\n\nimport styles from \"./order-info.module.scss\";\n\nconst OrderInfo = () => {\n    const { id }: {id: string} = useParams();\n    const dispatch = useDispatch();\n    const ingredients = useSelector(store => store.ingredients.ingredients);\n    const order = useSelector(store => store.ingredients.currentOrder.order);\n    const [orderLoaded, setOrderLoaded] = useState(false);\n\n    var totalPrice = 0;\n    var showed: string[] = [];\n\n    useEffect(() => {\n        dispatch<any>(fetchOrder(id))\n            // @ts-ignore\n            .then((result) => {\n                if (result.payload.success) {\n                    setOrderLoaded(true)\n                } else {\n                    setOrderLoaded(false)\n                }\n            })\n    }, [dispatch])\n    \n    if(orderLoaded && order && ingredients.length > 0) {\n            return (\n                <div className={styles.orderMain}>\n                    <div className='text text-center text_type_digits-default'>\n                        #{order.number}\n                    </div>\n                    <div className={`${styles.burgerName} text text_type_main-medium mt-40`}>{order.name}</div>\n                    <div className={`${styles.doneText} mt-3 text text_type_main-medium`}>{order.status === 'done' ? 'Выполнен' : 'В работе'}</div>\n                    <div className='text text_type_main-large'>Состав:</div>\n                    <div className={styles.ingrScroll}>\n                    {order.ingredients.map((item, index) => {\n                        const ingrInfo = ingredients.find(ingr => ingr._id === item);\n                        const howMany = order.ingredients.filter(ingr => ingr === item).length;\n                        if (ingrInfo) {\n                            totalPrice += ingrInfo.price;\n                            if (!showed.includes(ingrInfo._id)) {\n                                showed.push(ingrInfo._id)\n                                return (\n                                    <div key={index} className={styles.ingrLine}>\n                                        <div className={styles.miniIngr}>\n                                            <img\n                                                className={styles.miniIngrImage}\n                                                src={ingrInfo.image}\n                                            />\n                                        </div>\n                                        <span className=\"flex text text_type_main-default ml-4\">{ingrInfo.name}</span>\n                                        <div className={`${styles.orderPriceForOne} text text_type_digits-default`}>\n                                            {howMany+' x '+ingrInfo.price}\n                                            <CurrencyIcon type=\"primary\" />\n                                        </div>\n                                    </div>\n                                );\n                            } else return null;\n                        } else return null;\n                    })}\n                    </div>\n                    <div className={styles.OrderInfoBottom}>\n                        <span className=\"text text_type_main-default text_color_inactive\">\n                        {format(new Date(Date.parse(order.updatedAt)),\"PPP в kk:mm O\", { locale: ru })}\n                        </span>\n                        <div className={`${styles.orderPrice} text text_type_digits-default`}>\n                        {totalPrice}\n                        <CurrencyIcon type=\"primary\" />\n                    </div>\n                    </div>\n                </div>\n            );\n        } else return null;\n};\n\nexport default OrderInfo;\n","import { useParams } from \"react-router-dom\";\nimport { useSelector } from \"../../utils/hooks\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n    CurrencyIcon,\n    CloseIcon,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { format } from \"date-fns\";\nimport { ru } from \"date-fns/esm/locale\";\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\n\nimport styles from \"./order-modal.module.scss\";\n\nconst OrderModal = () => {\n    const { id }: {id: string} = useParams();\n    const history = useHistory();\n\n    const ingredients = useSelector((store) => store.ingredients.ingredients);\n    const orders = useSelector((store) => store.orders.orders);\n    const order = orders.find(item => item.number === parseInt(id));\n\n    var totalPrice = 0;\n    var showed: string[] = [];\n\n    const goBack = () => {\n        history.goBack();\n    }\n\n    if (order) {\n        return (\n            <ModalOverlay toggleModal={goBack}>\n                <div\n                    className={styles.modal}\n                    onClick={(e) => e.stopPropagation()}\n                >\n                    <div className={styles.orderMain}>\n                        <div className=\"d-flex justify-between text text_type_digits-default\">\n                            #{order.number}\n                            <div\n                                className=\"cu-p\"\n                                onClick={goBack}\n                            >\n                                <CloseIcon type=\"primary\" />\n                            </div>\n                        </div>\n                        <div className={`${styles.burgerName} text text_type_main-medium mt-40`}>\n                            {order.name}\n                        </div>\n                        <div\n                            className={`${styles.doneText} mt-3 text text_type_main-medium`}\n                        >\n                            {order.status === \"done\" ? \"Выполнен\" : \"В работе\"}\n                        </div>\n                        <div className=\"text text_type_main-large\">Состав:</div>\n                        <div className={styles.ingrScroll}>\n                            {order.ingredients.map((item, index) => {\n                                const ingrInfo = ingredients.find(\n                                    (ingr) => ingr._id === item\n                                );\n                                const howMany = order.ingredients.filter(\n                                    (ingr) => ingr === item\n                                ).length;\n                                if(ingrInfo) {\n                                    totalPrice += ingrInfo.price;\n                                    if (!showed.includes(ingrInfo._id)) {\n                                        showed.push(ingrInfo._id);\n                                        return (\n                                            <div key={index} className={styles.ingrLine}>\n                                                <div className={styles.miniIngr}>\n                                                    <img\n                                                        className={\n                                                            styles.miniIngrImage\n                                                        }\n                                                        src={ingrInfo.image}\n                                                    />\n                                                </div>\n                                                <span className=\"flex text text_type_main-default ml-4\">\n                                                    {ingrInfo.name}\n                                                </span>\n                                                <div\n                                                    className={`${styles.orderPriceForOne} text text_type_digits-default`}\n                                                >\n                                                    {howMany +\n                                                        \" x \" +\n                                                        ingrInfo.price}\n                                                    <CurrencyIcon type=\"primary\" />\n                                                </div>\n                                            </div>\n                                        );\n                                    } else return null;\n                                } else return null;\n                            })}\n                        </div>\n                        <div className={styles.OrderInfoBottom}>\n                            <span className=\"text text_type_main-default text_color_inactive\">\n                                {format(\n                                    new Date(Date.parse(order.updatedAt)),\n                                    \"PPP в kk:mm O\",\n                                    { locale: ru }\n                                )}\n                            </span>\n                            <div\n                                className={`${styles.orderPrice} text text_type_digits-default`}\n                            >\n                                {totalPrice}\n                                <CurrencyIcon type=\"primary\" />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ModalOverlay>\n        );\n    } else return null;\n};\n\nexport default OrderModal;\n","import { Link, NavLink, useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"../../utils/hooks\";\nimport { logout } from \"../../services/reducers/authSlice\";\n\nimport styles from \"./side-menu.module.scss\";\n\n\nexport function SideMenu() {\n    const dispatch = useDispatch()\n    const history = useHistory();\n\n    const logoutHandle = () => {\n        dispatch<any>(logout())\n        history.push(\"/login\")\n    }\n\n    return (\n        <div className={styles.linksWrapper}>\n            <NavLink\n                exact={true}\n                to={{ pathname: \"/profile\" }}\n                className='text_color_inactive'\n                activeClassName={styles.activeLink}\n            >\n                <span className={`${styles.profileLink} text text_type_main-default`}>Профиль</span>\n            </NavLink>\n            <NavLink\n                exact={true}\n                to={{ pathname: \"/profile/orders\" }}\n                className='text_color_inactive'\n                activeClassName={styles.activeLink}\n            >\n                <span className={`${styles.profileLink} text text_type_main-default mt-35`}>История заказов</span>\n            </NavLink>\n            <Link to=''>\n                <span onClick={logoutHandle} className={`${styles.profileLink} text_color_inactive text text_type_main-default mt-35`}>Выход</span>\n            </Link>\n            <div className={styles.links}>\n                <p className=\"text text_type_main-small text_color_inactive\">\n                    В этом разделе вы можете <br/> изменить свои персональные данные\n                </p>\n            </div>\n        </div>\n    )\n}","import { SideMenu } from \"../side-menu/side-menu\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"../../utils/hooks\";\nimport IngredientIcons from \"../ingredient-icons/ingredient-icons\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { getCookie } from \"../../utils/functions\";\nimport { wsGetOrders, wsClose } from \"../../services/reducers/wsSlice\";\nimport { format } from \"date-fns\";\nimport { ru } from \"date-fns/esm/locale\";\nimport styles from \"./profile-orders.module.scss\";\n\n\nexport default function ProfileOrders() {\n    const dispatch = useDispatch();\n    const location = useLocation();\n\n    const aToken = getCookie(\"accessToken\") as string;\n    const accessToken = aToken.split(\"Bearer \")[1];\n\n    useEffect(() => {\n        dispatch(wsGetOrders(\"wss://norma.nomoreparties.space/orders?token=\" + accessToken));\n\n        return () => {\n            dispatch(wsClose());\n        };\n    }, [dispatch]);\n\n    const orders = useSelector((store) => store.orders.orders);\n\n    if (orders) {\n        return (\n            <div className={styles.mainProfile}>\n                <SideMenu />\n                <section className={styles.ordersBlock}>\n                    {orders.map((item, index) => {\n                        return (\n                            <Link key={index} to={{ pathname: `/profile/orders/${item.number}`, state: { background: location }}}>\n                                <div className={styles.feedOrder}>\n                                    <div className={styles.feedOrderTop}>\n                                        <span className=\"text text_type_digits-default\">\n                                            #{item.number}\n                                        </span>\n                                        <span className=\"text text_type_main-default text_color_inactive\">\n                                            {format(new Date(Date.parse(item.updatedAt)), \"PPP в kk:mm O\", { locale: ru })}\n                                        </span>\n                                    </div>\n                                    <div className={`${styles.burgerName} mt-6 text text_type_main-medium`}>\n                                        {item.name}\n                                    </div>\n                                    <div style={{color: item.status === 'done' ? '#00CCCC' : ''}} className={`${styles.orderStatus} mt-2 text text_type_main-small`}>\n                                        {item.status === 'done' ? 'Выполнен' : 'Создан'}\n                                    </div>\n                                    <div className={styles.orderDetails}>\n                                        <IngredientIcons order={item} />\n                                    </div>\n                                </div>\n                            </Link>\n                        );\n                    })}\n                </section>\n            </div>\n        );\n    } else return null;\n}\n","import { Route, Redirect } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nimport { refreshTokenFunc } from \"../../services/reducers/authSlice\";\n\nexport function ProtectedRoute({ children, path: string, ...rest }: {children: JSX.Element, path: string, exact: boolean}) {\n    const [isTokenValidated, setIsTokenValidated] = useState(false)\n    const [notAuth, setNotAuth] = useState(true)\n\n    useEffect(() => {\n        refreshTokenFunc()\n            .then((result) => {\n                if (result.success) {\n                    setIsTokenValidated(true)\n                } else {\n                    setIsTokenValidated(false)\n                }\n            })\n            .catch((err) => {\n                setNotAuth(false)\n            })\n    }, []);\n\n    if (isTokenValidated === false && notAuth) { return <h2>Загружаем...</h2>; }\n\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                isTokenValidated ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n","import { Route, Redirect, useLocation } from \"react-router-dom\";\nimport { useSelector } from \"../../utils/hooks\";\nimport { useDispatch } from \"../../utils/hooks\";\nimport { useEffect } from \"react\";\n\nimport { getUserDetails } from \"../../services/reducers/authSlice\";\nimport { ILocation } from \"../../utils/types\";\n\nexport function ProtectedAuthRoute({ children, path, ...rest }: {children: JSX.Element, path: string, exact: boolean}) {\n    const user = useSelector((store) => store.auth.success);\n    const dispatch = useDispatch()\n    const location = useLocation<ILocation>()\n\n    useEffect(() => {\n        if (!user) {\n            dispatch<any>(getUserDetails());\n        }\n    }, [dispatch]);\n\n    return (\n        <Route\n            {...rest}\n            render={() =>\n                !user ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={ location.state?.from || '/' }\n                    />\n                )\n            }\n        />\n    );\n}\n","import React from \"react\";\nimport { useDispatch } from \"../utils/hooks\";\nimport { Link } from \"react-router-dom\";\nimport {\n    Button,\n    Input\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport { login } from \"../services/reducers/authSlice\";\n\nimport styles from \"./pages.module.scss\";\nimport { TICons } from \"@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons\";\n\n\nexport function LoginPage() {\n    const dispatch = useDispatch();\n    const [value, setValue] = React.useState(\"\");\n    const [passValue, setPassValue] = React.useState(\"\");\n    const [icon, setIcon]: [icon: keyof TICons | undefined, setIcon: Function] = React.useState(\"ShowIcon\");\n    const [type, setType]: [type: \"text\" | \"password\", setType: Function] = React.useState(\"password\");\n    const inputRef = React.useRef(null);\n\n    const onIconClick = () => {\n        type === \"password\" ? setType(\"text\") : setType(\"password\");\n        icon === \"ShowIcon\" ? setIcon(\"HideIcon\") : setIcon(\"ShowIcon\");\n    };\n\n    const loginHandle = (e: any) => {\n        e.preventDefault();\n        if (!value || !passValue) {\n            alert('Заполните все поля.')\n            return false\n        }\n        dispatch<any>(login({ email: value, password: passValue }));\n    }\n\n    return (\n        <div className={styles.main}>\n            <p className=\"text text_type_main-medium mb-6\">Вход</p>\n            <form onSubmit={loginHandle}>\n                <div className={styles.inputWrapper}>\n                    <Input\n                        type={\"email\"}\n                        placeholder={\"E-mail\"}\n                        onChange={(e) => setValue(e.target.value)}\n                        value={value}\n                        name={\"email\"}\n                        error={false}\n                        errorText={\"Введите e-mail\"}\n                        size={\"default\"}\n                    />\n                </div>\n                <div className={styles.inputWrapper}>\n                    <Input\n                        type={type}\n                        ref={inputRef}\n                        onIconClick={onIconClick}\n                        onChange={(e) => setPassValue(e.target.value)}\n                        value={passValue}\n                        placeholder={\"Пароль\"}\n                        icon={icon}\n                        name={\"name\"}\n                        error={false}\n                        errorText={\"Введите пароль\"}\n                        size={\"default\"}\n                    />\n                </div>\n                <div className={styles.inputWrapper}>\n                    <Button type=\"primary\" size=\"medium\">\n                        Войти\n                    </Button>\n                </div>\n            </form>\n            <div className={styles.links}>\n                <p className=\"text text-center text_type_main-small text_color_inactive\">\n                    Вы - новый пользователь?{\" \"}\n                    <Link to=\"/register\">Зарегистрироваться</Link>\n                </p>\n                <p className=\"mt-15 text-center text text_type_main-small text_color_inactive\">\n                    Забыли пароль?{\" \"}\n                    <Link to=\"/forgot-password\">Восстановить пароль</Link>\n                </p>\n            </div>\n        </div>\n    );\n}\n","\nexport function NotFound() {\n    return (\n        <>\n            <h1>not found;(</h1><br/>\n        </>\n    )\n}","import { useState, useRef } from \"react\";\nimport { useDispatch } from \"../utils/hooks\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n    Button,\n    Input\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { TICons } from \"@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons\";\n\nimport { register } from \"../services/reducers/authSlice\";\n\nimport styles from \"./pages.module.scss\";\n\n\nexport function RegisterPage() {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [value, setValue] = useState(\"\");\n    const [passValue, setPassValue] = useState(\"\");\n    const [nameValue, setNameValue] = useState(\"\");\n    const [type, setType]: [type: \"text\" | \"password\", setType: Function] = useState(\"password\");\n    const [icon, setIcon]: [icon: keyof TICons | undefined, setIcon: Function] = useState(\"ShowIcon\");\n    const inputRef = useRef(null);\n\n    const onIconClick = () => {\n        type === \"password\" ? setType(\"text\") : setType(\"password\");\n        icon === \"ShowIcon\" ? setIcon(\"HideIcon\") : setIcon(\"ShowIcon\");\n    };\n\n    const registerHandle = (e: any) => {\n        e.preventDefault();\n        if (!value || !passValue || !nameValue) {\n            alert('Заполните все поля.')\n            return false\n        }\n        dispatch<any>(register({ email: value, password: passValue, name: nameValue }));\n        history.push('/')\n    }\n\n    return (\n        <div className={styles.mainRegister}>\n            <p className=\"text text_type_main-medium mb-6\">Регистрация</p>\n            <form onSubmit={registerHandle}>\n                <div className={styles.inputWrapper}>\n                    <Input\n                        type={\"email\"}\n                        placeholder={\"Имя\"}\n                        onChange={(e) => setNameValue(e.target.value)}\n                        value={nameValue}\n                        name={\"name\"}\n                        error={false}\n                        errorText={\"Введите имя\"}\n                        size={\"default\"}\n                    />\n                </div>\n                <div className={styles.inputWrapper}>\n                    <Input\n                        type={\"email\"}\n                        placeholder={\"E-mail\"}\n                        onChange={(e) => setValue(e.target.value)}\n                        value={value}\n                        name={\"email\"}\n                        error={false}\n                        errorText={\"Введите e-mail\"}\n                        size={\"default\"}\n                    />\n                </div>\n                <div className={styles.inputWrapper}>\n                    <Input\n                        type={type}\n                        ref={inputRef}\n                        onIconClick={onIconClick}\n                        onChange={(e) => setPassValue(e.target.value)}\n                        value={passValue}\n                        placeholder={\"Пароль\"}\n                        icon={icon}\n                        name={\"password\"}\n                        error={false}\n                        errorText={\"Введите пароль\"}\n                        size={\"default\"}\n                    />\n                </div>\n                <div className={styles.inputWrapper}>\n                    <Button type=\"primary\" size=\"medium\">\n                        Зарегистрироваться\n                    </Button>\n                </div>\n            </form>\n            <div className={styles.links}>\n                <p className=\"text text-center text_type_main-small text_color_inactive\">\n                    Уже зарегистрированы?{\" \"}\n                    <Link to=\"/login\">Войти</Link>\n                </p>\n            </div>\n        </div>\n    );\n}","import { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n    Button,\n    Input\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport styles from \"./pages.module.scss\";\n\n\nexport function ForgotPassword() {\n    const forgotPassAPI = \"https://norma.nomoreparties.space/api/password-reset\"\n\n    const history = useHistory()\n    const [value, setValue] = useState(\"\")\n\n    const onForgotHandle = (e: any) => {\n        e.preventDefault();\n        fetch(forgotPassAPI, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify({ email: value })\n        })\n            .then((res) => {\n                if (!res.ok) return Promise.reject(`Не удалось отправить код на почту. Ошибка ${res.status}`)\n\n                return res.json();\n            })\n            .then((res) => {\n                localStorage.setItem('isForgot', '1')\n                history.push(\"/reset-password\")\n                return res;\n            })\n            .catch((error) => {\n                alert(error);\n                return false;\n            })\n    }\n\n    return (\n        <div className={styles.main}>\n            <p className=\"text text_type_main-medium mb-6\">Восстановление пароля</p>\n            <form onSubmit={onForgotHandle}>\n                <div className={styles.inputWrapper}>\n                    <Input\n                        type={\"email\"}\n                        placeholder={\"Укажите e-mail\"}\n                        onChange={(e) => setValue(e.target.value)}\n                        value={value}\n                        name={\"email\"}\n                        error={false}\n                        errorText={\"Введите e-mail\"}\n                        size={\"default\"}\n                    />\n                </div>\n                <div className={styles.inputWrapper}>\n                    <Button type=\"primary\" size=\"medium\">\n                        Восстановить\n                    </Button>\n                </div>\n            </form>\n            <div className={styles.links}>\n                <p className=\"text text-center text_type_main-small text_color_inactive\">\n                    Вспомнили пароль?{\" \"}\n                    <Link to=\"/login\">Войти</Link>\n                </p>\n            </div>\n        </div>\n    );\n}","import { useState, useRef } from \"react\";\nimport { Redirect, Link, useHistory } from \"react-router-dom\";\nimport {\n    Button,\n    Input,\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\n\nimport styles from \"./pages.module.scss\";\nimport { TICons } from \"@ya.praktikum/react-developer-burger-ui-components/dist/ui/icons\";\n\nexport function ResetPassword() {\n    const forgotPassAPI = \"https://norma.nomoreparties.space/api/password-reset\";\n    const [value, setValue] = useState(\"\")\n    const [passValue, setPassValue] = useState(\"\")\n    const [icon, setIcon]: [icon: keyof TICons | undefined, setIcon: Function] = useState(\"ShowIcon\");\n    const [type, setType]: [type: \"text\" | \"password\", setType: Function] = useState(\"password\");\n    const inputRef = useRef(null)\n    const onIconClick = () => {\n        type === \"password\" ? setType(\"text\") : setType(\"password\")\n        icon === \"ShowIcon\" ? setIcon(\"HideIcon\") : setIcon(\"ShowIcon\")\n    };\n\n    const history = useHistory()\n    const isForgot = localStorage.getItem('isForgot')\n\n    const onResetHandle = (e: any) => {\n        e.preventDefault();\n        fetch(`${forgotPassAPI}/reset`, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify({ password: passValue, token: value })\n        })\n            .then((res) => {\n                if (!res.ok) return Promise.reject(`Не удалось сбросить пароль. Ошибка ${res.status}`)\n\n                return res.json();\n            })\n            .then((res) => {\n                localStorage.setItem('isForgot', '0')\n                history.push(\"/login\")\n                return res;\n            })\n            .catch((error) => {\n                alert(error);\n                return false;\n            })\n    }\n\n    return (\n        isForgot === '1' ? (\n            <div className={styles.main}>\n                <p className=\"text text_type_main-medium mb-6\">Восстановление пароля</p>\n                <form onSubmit={onResetHandle}>\n                    <div className={styles.inputWrapper}>\n                        <Input\n                            type={type}\n                            ref={inputRef}\n                            onIconClick={onIconClick}\n                            onChange={(e) => setPassValue(e.target.value)}\n                            value={passValue}\n                            placeholder={\"Введите новый пароль\"}\n                            icon={icon}\n                            name={\"name\"}\n                            error={false}\n                            errorText={\"Введите пароль\"}\n                            size={\"default\"}\n                        />\n                    </div>\n                    <div className={styles.inputWrapper}>\n                        <Input\n                            type={\"text\"}\n                            placeholder={\"Введите код из письма\"}\n                            onChange={(e) => setValue(e.target.value)}\n                            value={value}\n                            name={\"name\"}\n                            error={false}\n                            errorText={\"Введите код\"}\n                            size={\"default\"}\n                        />\n                    </div>\n                    <div className={styles.inputWrapper}>\n                        <Button type=\"primary\" size=\"medium\">\n                            Сохранить\n                        </Button>\n                    </div>\n                </form>\n                <div className={styles.links}>\n                    <p className=\"text text-center text_type_main-small text_color_inactive\">\n                        Вспомнили пароль? <Link to=\"/login\">Войти</Link>\n                    </p>\n                </div>\n            </div>\n        ) : (\n            <Redirect\n                to={{\n                    pathname: '/forgot-password'\n                }}\n            />\n        )\n    );\n}\n","import { useState, useRef, useEffect } from \"react\";\nimport {\n    Button,\n    Input\n} from \"@ya.praktikum/react-developer-burger-ui-components\";\nimport { useSelector, useDispatch } from \"../utils/hooks\";\n\nimport { SideMenu } from \"../components/side-menu/side-menu\";\n\nimport { setUserDetails, getUserDetails } from \"../services/reducers/authSlice\";\n\nimport styles from \"./pages.module.scss\";\n\n\nexport function ProfilePage() {\n    const user = useSelector(store => store.auth.user)\n    const dispatch = useDispatch()\n    const [value, setValue] = useState(user.email)\n    const [passValue, setPassValue] = useState(\"\")\n    const [nameValue, setNameValue] = useState(user.name)\n    const inputRef = useRef(null)\n    const [userLoaded, setUserLoaded] = useState(false)\n\n    const editUserHandle = (e: any) => {\n        e.preventDefault();\n        dispatch<any>(setUserDetails({ email: value, name: nameValue, password: passValue }))\n    }\n\n    const onResetHandle = () => {\n        setValue(user.email)\n        setNameValue(user.name)\n        setPassValue('')\n    }\n\n    useEffect(() => {\n        dispatch<any>(getUserDetails())\n            // @ts-ignore\n            .then((result) => {\n                if (result.payload?.success) {\n                    setUserLoaded(true)\n                } else {\n                    setUserLoaded(false)\n                }\n            })\n    }, [dispatch])\n\n    return (\n        userLoaded ? (\n            <div className={styles.mainProfile}>\n                <SideMenu />\n                <div className={styles.inputMainWrapper}>\n                    <form onSubmit={editUserHandle}>\n                        <div className={styles.inputWrapper}>\n                            <Input\n                                type={\"text\"}\n                                placeholder={\"Имя\"}\n                                onChange={(e) => setNameValue(e.target.value)}\n                                value={nameValue || ''}\n                                name={\"name\"}\n                                icon={\"EditIcon\"}\n                                error={false}\n                                errorText={\"Введите имя\"}\n                                size={\"default\"}\n                            />\n                        </div>\n                        <div className={styles.inputWrapper}>\n                            <Input\n                                type={\"email\"}\n                                placeholder={\"E-mail\"}\n                                onChange={(e) => setValue(e.target.value)}\n                                value={value || ''}\n                                name={\"email\"}\n                                icon={\"EditIcon\"}\n                                error={false}\n                                errorText={\"Введите e-mail\"}\n                                size={\"default\"}\n                            />\n                        </div>\n                        <div className={styles.inputWrapper}>\n                            <Input\n                                type={\"password\"}\n                                ref={inputRef}\n                                onChange={(e) => setPassValue(e.target.value)}\n                                value={passValue}\n                                placeholder={\"Пароль\"}\n                                icon={\"EditIcon\"}\n                                name={\"password\"}\n                                error={false}\n                                errorText={\"Введите пароль\"}\n                                size={\"default\"}\n                            />\n                        </div>\n                    </form>\n                    <div className={styles.inputWrapper}>\n                        <Button onClick={onResetHandle} type=\"secondary\" size=\"medium\">\n                            Отмена\n                        </Button>\n                        <Button onClick={editUserHandle} type=\"primary\" size=\"medium\">\n                            Сохранить\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        ) : (\n            null\n        )\n\n    );\n}\n","import React from \"react\";\nimport { Route, Switch, useHistory, useLocation } from \"react-router-dom\";\nimport { useDispatch } from \"../../utils/hooks\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n\nimport AppHeader from \"../app-header/app-header\";\nimport BurgerIngridients from \"../burger-ingredients/burger-ingredients\";\nimport BurgerConstructor from \"../burger-constructor/burger-constructor\";\nimport IngredientPage from \"../ingredient-details/ingredient-page\";\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\nimport Feed from \"../feed/feed\";\nimport OrderInfo from \"../order-info/order-info\";\nimport OrderModal from \"../order-modal/order-modal\";\nimport ProfileOrders from \"../profile-orders/profile-orders\";\nimport { ProtectedRoute } from \"../protected-route/protected-route\";\nimport { ProtectedAuthRoute } from \"../protected-auth-route/protected-auth-route\";\nimport { fetchIngredients } from \"../../services/reducers/ingredientsSlice\";\nimport { LoginPage, NotFound, RegisterPage, ResetPassword, ForgotPassword, ProfilePage } from '../../pages';\n\nimport styles from \"./app.module.scss\";\nimport \"macro-css\";\nimport { ILocation } from \"../../utils/types\";\n\nconst App: React.FC = () => {\n    const location = useLocation<ILocation>()\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const background: any = history.action === 'PUSH' && location.state && location.state.background\n\n    React.useEffect(() => {\n        dispatch<any>(fetchIngredients());\n    }, [dispatch]);\n\n    return (\n        <>\n            <AppHeader />\n            <Switch location={background || location}>\n                <Route path=\"/\" exact={true}>\n                    <main className={styles.burgerTable}>\n                        <span className=\"text text_type_main-large mt-40\">\n                            Соберите бургер\n                        </span>\n                        <DndProvider backend={HTML5Backend}>\n                            <BurgerIngridients />\n                            <BurgerConstructor />\n                        </DndProvider>\n                    </main>\n                </Route>\n                <Route path=\"/ingredients/:id\" exact={true}>\n                    <IngredientPage />\n                </Route>\n                <Route path=\"/feed/\" exact={true}>\n                    <Feed />\n                </Route>\n                <Route path=\"/feed/:id\" exact={true}>\n                    <OrderInfo />\n                </Route>\n                <ProtectedAuthRoute path=\"/login\" exact={true}>\n                    <LoginPage/>\n                </ProtectedAuthRoute>\n                <ProtectedAuthRoute path=\"/register\" exact={true}>\n                    <RegisterPage/>\n                </ProtectedAuthRoute>\n                <ProtectedAuthRoute path=\"/reset-password\" exact={true}>\n                    <ResetPassword/>\n                </ProtectedAuthRoute>\n                <ProtectedAuthRoute path=\"/forgot-password\" exact={true}>\n                    <ForgotPassword/>\n                </ProtectedAuthRoute>\n                <ProtectedRoute path=\"/profile\" exact={true}>\n                    <ProfilePage/>\n                </ProtectedRoute>\n                <ProtectedRoute path=\"/profile/orders\" exact={true}>\n                    <ProfileOrders/>\n                </ProtectedRoute>\n                <Route path=\"/profile/orders/:id\" exact={true}>\n                    <OrderInfo />\n                </Route>\n                <Route>\n                    <NotFound/>\n                </Route>\n            </Switch>\n\n            {background && <Route path=\"/ingredients/:id\" children={<IngredientDetails />} />} \n            {background && <Route path=\"/feed/:id\" children={<OrderModal />} />} \n            {background && <Route path=\"/profile/orders/:id\" children={<OrderModal />} />} \n        </>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport thunk from 'redux-thunk'\nimport rootReducer from \"./services/reducers/rootReducer\";\nimport { wsMiddleware } from \"./services/middleware\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from './reportWebVitals';\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: [thunk, wsMiddleware]\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type TReduxStore = ReturnType<typeof store.getState>\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topHeader\":\"app-header_topHeader__WVJvN\",\"mainNav\":\"app-header_mainNav__3g7U7\",\"topTitle\":\"app-header_topTitle__2wtCO\",\"navElement\":\"app-header_navElement__3iZ5V\",\"logo\":\"app-header_logo__2JALl\",\"navUl\":\"app-header_navUl__1TGBf\",\"activeLink\":\"app-header_activeLink__2BwNZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderMain\":\"order-modal_orderMain__238sJ\",\"doneText\":\"order-modal_doneText__9IZWh\",\"ingrScroll\":\"order-modal_ingrScroll__11o1E\",\"OrderInfoBottom\":\"order-modal_OrderInfoBottom__2fA_n\",\"orderPrice\":\"order-modal_orderPrice__1RKTj\",\"ingrLine\":\"order-modal_ingrLine__192Kz\",\"miniIngr\":\"order-modal_miniIngr__19_iN\",\"miniIngrImage\":\"order-modal_miniIngrImage__Pvnl0\",\"orderPriceForOne\":\"order-modal_orderPriceForOne__38jZ-\",\"modal\":\"order-modal_modal__3LhGF\",\"burgerName\":\"order-modal_burgerName__3td99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderMain\":\"order-info_orderMain__1Qa1X\",\"doneText\":\"order-info_doneText__3O4Aw\",\"ingrScroll\":\"order-info_ingrScroll__3J999\",\"OrderInfoBottom\":\"order-info_OrderInfoBottom__1YFeA\",\"orderPrice\":\"order-info_orderPrice__3rkER\",\"ingrLine\":\"order-info_ingrLine__36Cpz\",\"miniIngr\":\"order-info_miniIngr__3CtSV\",\"miniIngrImage\":\"order-info_miniIngrImage__1CAIi\",\"orderPriceForOne\":\"order-info_orderPriceForOne__2Q2gH\",\"burgerName\":\"order-info_burgerName__2U45_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructorBlock\":\"burger-constructor_constructorBlock__bjkB7\",\"price\":\"burger-constructor_price___Wnow\",\"topBottom\":\"burger-constructor_topBottom__vaTI1\",\"ingredientsList\":\"burger-constructor_ingredientsList__3vMA4\",\"ingredientsListInner\":\"burger-constructor_ingredientsListInner__2u2hQ\",\"priceTotal\":\"burger-constructor_priceTotal__2UTnc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linksWrapper\":\"side-menu_linksWrapper__BwZm1\",\"profileLink\":\"side-menu_profileLink__15qcy\",\"activeLink\":\"side-menu_activeLink__1r1ZD\",\"links\":\"side-menu_links__2SaDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainProfile\":\"profile-orders_mainProfile__1tLRV\",\"ordersBlock\":\"profile-orders_ordersBlock__1pzo7\",\"orderStatus\":\"profile-orders_orderStatus__38CKl\",\"feedOrder\":\"profile-orders_feedOrder__Rom3T\",\"feedOrderTop\":\"profile-orders_feedOrderTop__1GRtR\",\"orderDetails\":\"profile-orders_orderDetails__1fayH\",\"burgerName\":\"profile-orders_burgerName__u_jeu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"miniOrder\":\"ingredient-icons_miniOrder__Pzt6N\",\"miniIngrOuter\":\"ingredient-icons_miniIngrOuter__3O7iG\",\"miniIngr\":\"ingredient-icons_miniIngr__14y_a\",\"miniIngrImage\":\"ingredient-icons_miniIngrImage__3am_o\",\"ingrMore\":\"ingredient-icons_ingrMore__2HyZR\",\"orderPrice\":\"ingredient-icons_orderPrice__2437S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"ingredient_ingredient__3tAi7\",\"ingredientTitle\":\"ingredient_ingredientTitle__3C2_j\",\"priceWrapper\":\"ingredient_priceWrapper__1Lhpo\",\"ingredientPrice\":\"ingredient_ingredientPrice__13hHj\",\"counter\":\"ingredient_counter__20rIe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderNumber\":\"order-accepted_orderNumber__2UE0q\",\"orderId\":\"order-accepted_orderId__3GQJc\",\"doneLogo\":\"order-accepted_doneLogo__2pAbZ\",\"orderStartInfo\":\"order-accepted_orderStartInfo__3wkpc\",\"orderPlaceInfo\":\"order-accepted_orderPlaceInfo__cxB7V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"pages_main__TBi2z\",\"mainRegister\":\"pages_mainRegister__1fWMK\",\"mainProfile\":\"pages_mainProfile__38qDi\",\"inputWrapper\":\"pages_inputWrapper__2g6yd\",\"inputMainWrapper\":\"pages_inputMainWrapper__10Gwq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientsBlock\":\"burger-ingredients_ingredientsBlock__2wYht\",\"ingredients\":\"burger-ingredients_ingredients__32gp3\",\"tabsNav\":\"burger-ingredients_tabsNav__2F_Ix\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"closeButton\":\"modal_closeButton__3W6Tk\",\"modal\":\"modal_modal__2bhYs\",\"details\":\"modal_details__3eZFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shortList\":\"ingredient-section_shortList__2eUDo\",\"sectionTitle\":\"ingredient-section_sectionTitle__ElmqX\"};"],"sourceRoot":""}